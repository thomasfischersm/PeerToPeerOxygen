package com.playposse.peertopeeroxygen.backend.serveractions;

import android.support.test.filters.MediumTest;
import android.support.test.runner.AndroidJUnit4;

import com.google.firebase.iid.FirebaseInstanceId;
import com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.PeerToPeerOxygenApi;
import com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.DomainBean;
import com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MasterUserBean;
import com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionLadderBean;
import com.playposse.peertopeeroxygen.backend.serveractions.util.ApiTestUtil;
import com.restfb.types.TestUser;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.io.IOException;

import static junit.framework.Assert.assertEquals;
import static junit.framework.Assert.assertNotNull;

/**
 * An API test for SaveMissionLadderServerAction.
 */
@RunWith(AndroidJUnit4.class)
@MediumTest
public class SaveMissionLadderServerActionTest {

    private static final String MISSION_LADDER_NAME = "Generated mission ladder";
    private static final String MISSION_LADDER_DESCRIPTION = "Autogenerated. DO NOT USE!";
    private static final String MINOR_CHANGE =" minor change";

    private PeerToPeerOxygenApi api;
    private MasterUserBean masterUserBean;
    private DomainBean testDomainBean;

    @Before
    public void setUp() throws IOException {
        api = ApiTestUtil.instantiateApi();
        TestUser fbTestUser = ApiTestUtil.createFbTestUser(ApiTestUtil.TEST_USER_NAME);
        masterUserBean = ApiTestUtil.registerOrLoginUser(
                fbTestUser,
                FirebaseInstanceId.getInstance().getToken(),
                null);
        testDomainBean = ApiTestUtil.createPrivateTestDomain(api, masterUserBean);
    }

    @Test
    public void createMissionLadder() throws IOException {
        createTestMissionLadder();
    }

    private MissionLadderBean createTestMissionLadder() throws IOException {
        MissionLadderBean missionLadderBean = new MissionLadderBean();
        missionLadderBean.setName(MISSION_LADDER_NAME);
        missionLadderBean.setDescription(MISSION_LADDER_DESCRIPTION);
        missionLadderBean.setDomainId(testDomainBean.getId());

        MissionLadderBean resultBean = api.saveMissionLadder(
                masterUserBean.getSessionId(),
                testDomainBean.getId(),
                missionLadderBean)
                .execute();

        assertNotNull(resultBean);
        assertNotNull(resultBean.getId());
        assertEquals(MISSION_LADDER_NAME, resultBean.getName());
        assertEquals(MISSION_LADDER_DESCRIPTION, resultBean.getDescription());
        assertEquals(testDomainBean.getId(), resultBean.getDomainId());

        return resultBean;
    }

    @Test
    public void updateMissionLadder() throws IOException {
        MissionLadderBean missionLadderBean = createTestMissionLadder();

        missionLadderBean.setName(MISSION_LADDER_NAME + MINOR_CHANGE);
        missionLadderBean.setDescription(MISSION_LADDER_DESCRIPTION + MINOR_CHANGE);

        MissionLadderBean resultBean = api.saveMissionLadder(
                masterUserBean.getSessionId(),
                testDomainBean.getId(),
                missionLadderBean)
                .execute();

        assertNotNull(resultBean);
        assertNotNull(resultBean.getId());
        assertEquals(MISSION_LADDER_NAME + MINOR_CHANGE, resultBean.getName());
        assertEquals(MISSION_LADDER_DESCRIPTION + MINOR_CHANGE, resultBean.getDescription());
        assertEquals(testDomainBean.getId(), resultBean.getDomainId());
    }

    @Test
    public void deleteMissionLadder() throws IOException {
        MissionLadderBean missionLadderBean = createTestMissionLadder();

        api.deleteMissionLadder(
                masterUserBean.getSessionId(),
                missionLadderBean.getId(),
                testDomainBean.getId())
                .execute();
    }
}
